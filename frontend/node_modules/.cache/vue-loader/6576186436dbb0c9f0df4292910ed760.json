{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/src/views/home.vue?vue&type=style&index=0&id=7eb2bc79&scoped=true&lang=css&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/src/views/home.vue","mtime":1609004045061},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaHRtbCxib2R5ewogIGhlaWdodDogMTAwJTsKfQoKI2hvbWV7CiAgaGVpZ2h0OiAxMDAlOwp9CgojbWFpbiB7CiAgdHJhbnNpdGlvbjogbWFyZ2luLWxlZnQgLjRzIGVhc2Utb3V0OwogIG1hcmdpbi1sZWZ0OiA0cmVtOwp9CgojZW1haWxzLXZpZXdlcnsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"home\">\n    <sideMenu/>\n    <div id=\"main\">\n      <headerBar/>\n      <controlBar/>\n      <titleBar/>\n      <div id=\"emails-viewer\" ref=\"emailsContainer\"></div>\n      <compose/>\n    </div>\n    <currentEmail/>\n  </div>\n</template>\n\n<script>\nimport sideMenu from '../components/sideNav.vue';\nimport headerBar from '../components/header.vue';\nimport controlBar from '../components/controlBar.vue';\nimport compose from '../components/compose.vue';\nimport titleBar from '../components/header/titleBar.vue';\nimport currentEmail from '../components/currentEmail.vue';\n\nimport emailCard from '../components/compose/emailCard.vue';\nimport Vue from 'vue';\n\nimport {mapGetters, mapActions} from 'vuex';\nimport store from '../store';\n\nimport axios from 'axios';\n\nexport default {\n  name: 'home',\n  components: {\n    sideMenu,\n    headerBar,\n    controlBar,\n    compose,\n    titleBar,\n    currentEmail,\n  },\n  data(){\n    return{\n    }\n  },\n  computed: mapGetters(['getEmailsList', 'getUserId', 'getSortingParam', 'getStartIndex', 'getActiveFolder']),\n  methods: {\n    ...mapActions(['updateEmailsList', 'updateEmails', 'setActiveFolder']),\n    addEmails(emailsList){\n      let EmailCard = Vue.extend(emailCard);\n      for(const email of emailsList){\n        const newEmailCard = new EmailCard({\n          propsData: { inbox: true, emailInfo: email}\n        })\n        newEmailCard.$mount();\n        this.$refs.emailsContainer.appendChild(newEmailCard.$el);\n        store.commit('addEmail', newEmailCard);\n      }\n    },\n    updateEmailsList(){\n      axios.get(`http://localhost:8080//getEmailsList`, {\n        params: { \n          userId: this.getUserId,\n          folderName: \"inbox\",\n          sortType: 1,\n          sortIdntifier: 0,\n          start: 0,\n        }\n      })\n      .then( response => {\n        this.reset();\n        this.addEmails(response.data);\n        this.updateEmails(response.data);\n      })\n      .catch( error => console.log(error)); \n    },\n    reset(){\n      for(const email of [...store.getters.getEmailsListPageInfo.emailsList]){\n        store.commit('removeEmail', email);\n        email.removeSelf();\n      }\n    }\n  },\n  mounted(){\n    this.updateEmailsList();\n    store.commit('setHomePage', this);\n  }\n}\n</script>\n\n<style scoped>\nhtml,body{\n  height: 100%;\n}\n\n#home{\n  height: 100%;\n}\n\n#main {\n  transition: margin-left .4s ease-out;\n  margin-left: 4rem;\n}\n\n#emails-viewer{\n  background-color: white;\n  width: 100%;\n}\n</style>"]}]}