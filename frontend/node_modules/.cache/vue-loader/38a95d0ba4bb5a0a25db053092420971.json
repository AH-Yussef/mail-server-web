{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/src/components/header/titleBar.vue?vue&type=template&id=5e20fb7d&scoped=true&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/src/components/header/titleBar.vue","mtime":1608720604495},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}