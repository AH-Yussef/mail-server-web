{"remainingRequest":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/src/components/controlBar.vue?vue&type=style&index=0&id=a1c32ef4&scoped=true&lang=css&","dependencies":[{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/src/components/controlBar.vue","mtime":1609011539086},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/alihassan/The_LOL/Projects/collage_related/SecondYear/programming2/mail-server-web/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRyb2wtd3JhcHBlcnsKICBkaXNwbGF5OiBmbGV4OwoJZmxleC1kaXJlY3Rpb246IHJvdzsKCWp1c3RpZnktY29udGVudDogZmxleC1zdGFydDsKCWFsaWduLWl0ZW1zOiBjZW50ZXI7CgloZWlnaHQ6IDNyZW07Cglib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiKDIyNCwgMjI0LCAyMjQsIDAuNik7CglwYWRkaW5nLWxlZnQ6IDFyZW07CiAgd2lkdGg6IDEwMCU7Cn0KCi5jb250cm9sLWJ0bnsKCWRpc3BsYXk6IGZsZXg7CglqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKCWFsaWduLWl0ZW1zOiBjZW50ZXI7CgloZWlnaHQ6IDJyZW07Cgl3aWR0aDogMnJlbTsKCWJvcmRlci1yYWRpdXM6IDUwJTsKICB1c2VyLXNlbGVjdDogbm9uZTsKfQouY29udHJvbC1idG46aG92ZXJ7CgliYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjI0LCAyMjQsIDIyNCwgMC42KTsKfQojZW1haWxzLW5hdnsKCWhlaWdodDogMnJlbTsKCWRpc3BsYXk6IGZsZXg7CglqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTsKCWFsaWduLWl0ZW1zOiBjZW50ZXI7Cgl3aWR0aDogNXJlbTsKCW1hcmdpbi1sZWZ0OiBhdXRvOwoJbWFyZ2luLXJpZ2h0OiAycmVtOwp9CgppbnB1dFt0eXBlPWNoZWNrYm94XSArIGxhYmVsIHsKICBkaXNwbGF5OiBibG9jazsKCXVzZXItc2VsZWN0OiBub25lOwp9CgppbnB1dFt0eXBlPWNoZWNrYm94XSB7CiAgZGlzcGxheTogbm9uZTsKfQpsYWJlbHsKCWNvbG9yOiAjNzY3Njc2OwoJZm9udC1zaXplOiBtZWRpdW07Cglmb250LXdlaWdodDogbm9ybWFsOwp9CgppbnB1dFt0eXBlPWNoZWNrYm94XSArIGxhYmVsOmJlZm9yZSB7CiAgY29udGVudDogIlwyNzE0IjsKICBib3JkZXI6IDJweCBzb2xpZCAjNzY3Njc2OwogIGJvcmRlci1yYWRpdXM6IDAuM3JlbTsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgd2lkdGg6IDAuOHJlbTsKICBoZWlnaHQ6IDAuOHJlbTsKICBwYWRkaW5nOiAwLjJyZW07CiAgbWFyZ2luLXJpZ2h0OiAwLjRyZW07CiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTsKICBjb2xvcjogdHJhbnNwYXJlbnQ7CiAgdHJhbnNpdGlvbjogLjJzOwp9CgppbnB1dFt0eXBlPWNoZWNrYm94XSArIGxhYmVsOmFjdGl2ZTpiZWZvcmUgewogIHRyYW5zZm9ybTogc2NhbGUoMCk7Cn0KCmlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQgKyBsYWJlbDpiZWZvcmUgewogIGJhY2tncm91bmQtY29sb3I6ICMzNDc0RTA7CiAgYm9yZGVyLWNvbG9yOiAjMzQ3NEUwOwp9CgppbnB1dFt0eXBlPWNoZWNrYm94XTpkaXNhYmxlZCArIGxhYmVsOmJlZm9yZSB7CiAgdHJhbnNmb3JtOiBzY2FsZSgxKTsKICBib3JkZXItY29sb3I6ICM3Njc2NzY7Cn0KCmlucHV0W3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQ6ZGlzYWJsZWQgKyBsYWJlbDpiZWZvcmUgewogIHRyYW5zZm9ybTogc2NhbGUoMSk7CiAgYmFja2dyb3VuZC1jb2xvcjogIzM0NzRFMDsKICBib3JkZXItY29sb3I6ICMzNDc0RTA7Cn0KCiNzZWxlY3QtYWxsLWNvbnRhaW5lcnsKCWRpc3BsYXk6IGZsZXg7CglqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKCWFsaWduLWl0ZW1zOiBjZW50ZXI7CgltYXJnaW4tbGVmdDogMS41cmVtOwp9CgouaGlkZGVuewogIHZpc2liaWxpdHk6IGhpZGRlbjsKICBkaXNwbGF5OiBub25lOwp9Ci52aXNpYmxlewogIHZpc2liaWxpdHk6IHZpc2libGU7CiAgZGlzcGxheTogZmxleDsKfQoKI2RlbGV0ZS1jdXJyZW50LWVtYWlsewogIG1hcmdpbi1sZWZ0OiBhdXRvOwogIG1hcmdpbi1yaWdodDogM3JlbTsKfQoKI2RlbGV0ZS1zZWxlY3RlZC1lbWFpbHN7CiAgbWFyZ2luLWxlZnQ6IDJyZW07Cn0K"},{"version":3,"sources":["controlBar.vue"],"names":[],"mappingsfile":"controlBar.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"control-bar\">\n\n    <div id=\"control-wrapper\" :class=\"['control-wrapper', getActiveStatus ? 'hidden': 'visible']\">\n      <div id=\"refresh-btn\" class=\"control-btn\" @click=\"refresh()\">\n        <img src=\"../assets/controlBar/refresh-gray.png\" width=\"20px\">\n      </div>\n      <form id=\"select-all-container\">\n        <input type=\"checkbox\" id=\"select-all\" \n              :value=\"[selectAllActive ? 'Un-select all' : 'Select all']\" \n              @change=\"toggleSelectAll()\">\n        <label for=\"select-all\">Select all</label>\n      </form>\n      <div id=\"delete-selected-emails\" class=\"control-btn\" @click=\"deleteCurrentEmails()\">\n        <img src=\"../assets/sideMenu/trash-gray.png\" width=\"20px\">\n      </div>\n      <div id=\"emails-nav\">\n        <div id=\"backward-btn\" class=\"control-btn\" @click=\"goToPrevPage()\">\n          <img src=\"../assets/controlBar/backward.png\" width=\"17px\">\n        </div>\n        <div id=\"forward-btn\" class=\"control-btn\" @click=\"goToNextPage()\">\n          <img src=\"../assets/controlBar/forward.png\" width=\"17px\">\n        </div>\n      </div>\n    </div>\n    \n    <div id=\"current-email-control\" :class=\"['control-wrapper', getActiveStatus? 'visible': 'hidden']\">\n      <div id=\"go-back\" class=\"control-btn\" @click=\"goBackHome()\">\n        <img src=\"../assets/header/back.png\" width=\"20px\">\n      </div>\n      <div id=\"delete-current-email\" class=\"control-btn\">\n        <img src=\"../assets/sideMenu/trash-gray.png\" width=\"20px\">\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport {mapGetters, mapActions} from 'vuex';\nimport store from '../store';\nimport axios from 'axios';\nimport {fireInfoPopUp} from '../alerts.js';\nexport default {\n  name: 'controlBar',\n  data(){\n    return{\n      selectAllActive: false,\n    }\n  },\n  computed: mapGetters(['getUserId', 'getActiveFolder', 'getEmailsListPageInfo', 'getStartIndex', 'getEmailsNum', 'getActiveStatus', 'getSortingParam', 'getSelectedEmails']),\n\tmethods:{\n    ...mapActions(['updateEmails', 'incrementStartIndex', 'decrementStartIndex']),\n\t\trefresh(){\n      const homePage = store.getters.getHomePage;\n      axios.get(`http://localhost:8080//getEmailsList`, {\n        params: { \n          userId: this.getUserId,\n          folderName: this.getActiveFolder,\n          sortType: this.getSortingParam.sortType,\n          sortIdntifier: this.getSortingParam.sortIdntifier,\n          start: 0,\n        }\n      })\n      .then( response => {\n        homePage.reset();\n        homePage.addEmails(response.data);\n        this.updateEmails(response.data);\n      })\n      .catch( error => console.log(error)); \n    },\n    toggleSelectAll(){\n      this.selectAllActive = !this.selectAllActive;\n      if(this.selectAllActive){\n        this.selectAllEmails();\n      }\n      else{\n        this.unSelectAllEmails();\n      }\n    },\n    selectAllEmails(){\n      store.commit('clearSelecteEmails');\n      for(const email of [...this.getEmailsListPageInfo.emailsList]){\n        email.selectSelf();\n        // store.commit('addSelectedEmail', email);\n      }\n    },\n    unSelectAllEmails(){\n      for(const email of [...this.getEmailsListPageInfo.emailsList]){\n        email.unSelectSelf();\n      }\n      store.commit('clearSelecteEmails');\n    },\n    goToNextPage(){\n      if(store.getters.getSubOperation.active) {\n        if(store.getters.getOpsConds.filter) this.getNextFiltered();\n        else if(store.getters.getOpsConds.sort) this.getNextSorted();\n        else if(store.getters.getOpsConds.search) this.getNextSearch();\n        return;\n      }\n      if(this.getStartIndex + 15 >= this.getEmailsNum) return;\n      this.incrementStartIndex();\n      this.updateEmailsList();\n    },\n    goToPrevPage(){\n      if(store.getters.getSubOperation.active) {\n        if(store.getters.getOpsConds.filter) this.getPrevFiltered();\n        else if(store.getters.getOpsConds.sort) this.getPrevSorted();\n        else if(store.getters.getOpsConds.search) this.getPrevSearch();\n        return;\n      }\n      if(this.getStartIndex - 15 < 0) return; \n      this.decrementStartIndex();\n      this.updateEmailsList();\n    },\n    getNextFiltered(){\n      if(store.getters.getSubOperation.start + 15 >= this.getEmailsNum) return;\n      store.commit('setSubOpStart', store.getters.getSubOperation.start + 15);\n      this.fetchFilteredEmails()\n    },\n    getPrevFiltered(){\n      if(store.getters.getSubOperation.start - 15 < 0) return;\n      store.commit('setSubOpStart', store.getters.getSubOperation.start - 15);\n      this.fetchFilteredEmails()\n    },\n    getNextSorted(){\n      if(store.getters.getSubOperation.start + 15 >= this.getEmailsNum) return;\n      store.commit('setSubOpStart', store.getters.getSubOperation.start + 15);\n      this.fetchSortedEmails();\n    },\n    getPrevSorted(){\n      if(store.getters.getSubOperation.start - 15 < 0) return;\n      store.commit('setSubOpStart', store.getters.getSubOperation.start - 15);   \n      this.fetchSortedEmails(); \n    },\n    getNextSearch(){\n      if(store.getters.getSubOperation.start + 15 >= this.getEmailsNum) return;\n      store.commit('setSubOpStart', store.getters.getSubOperation.start + 15);\n      this.fetchSearchedEmail();\n    },\n    getPrevSearch(){\n      if(store.getters.getSubOperation.start - 15 < 0) return;\n      store.commit('setSubOpStart', store.getters.getSubOperation.start - 15);   \n      this.fetchSearchedEmail(); \n    },\n    fetchFilteredEmails(){\n      const homePage = store.getters.getHomePage;\n      axios.get(`http://localhost:8080//filter`, {\n        params: { \n          userId: this.getUserId,\n          required: store.getters.getSubOperation.required,\n          fileName: this.getActiveFolder,\n          criteria: store.getters.getSubOperation.type,\n        }\n      })\n      .then( response => {\n        homePage.reset();\n        const filteredEmails = response.data.slice(store.getters.getSubOperation.start, store.getters.getSubOperation.start +15);\n        homePage.addEmails(filteredEmails);\n        this.updateEmails(filteredEmails);\n      })\n      .catch( error => console.log(error)); \n    },\n    fetchSortedEmails(){\n      const homePage = store.getters.getHomePage;\n      axios.get(`http://localhost:8080//sort`, {\n        params: { \n          userId: store.getters.getUserId,\n          folderName: store.getters.getActiveFolder,\n          sortType: store.getters.getSubOperation.sortType,\n          sortIdntifier: store.getters.getSubOperation.sortIdntifier,\n        }\n      })\n      .then( response => {\n        homePage.reset();\n        const sortedEmails = response.data.slice(store.getters.getSubOperation.start, store.getters.getSubOperation.start +15);\n        homePage.addEmails(sortedEmails);\n        this.updateEmails(sortedEmails);\n      })\n      .catch( error => console.log(error)); \n    },\n    fetchSearchedEmail(){\n      const homePage = store.getters.getHomePage;\n      axios.get(`http://localhost:8080//searchFile`, {\n        params: { \n          userId: store.getters.getUserId,\n          required: store.getters.getSubOperation.word,\n          folderName: store.getters.getActiveFolder,\n          criteria: store.getters.getSubOperation.searchBy,\n        }\n      })\n      .then( response => {\n        homePage.reset();\n        const result = response.data.slice(store.getters.getSubOperation.start, store.getters.getSubOperation.start +15);\n        homePage.addEmails(result);\n        this.updateEmails(result);\n      })\n      .catch( error => console.log(error)); \n    },\n    updateEmailsList(){\n      const homePage = store.getters.getHomePage;\n      axios.get(`http://localhost:8080//getEmailsList`, {\n        params: { \n          userId: this.getUserId,\n          folderName: this.getActiveFolder,\n          sortType: 1,\n          sortIdntifier: 0,\n          start: this.getStartIndex,\n        }\n      })\n      .then( response => {\n        homePage.reset();\n        homePage.addEmails(response.data);\n        this.updateEmails(response.data);\n      })\n      .catch( error => console.log(error)); \n    },\n    goBackHome(){\n      store.commit('setActiveEmail', false)\n    },\n    deleteCurrentEmails(){\n      const selectedEmailsNumber = this.getSelectedEmails.length;\n      console.log(selectedEmailsNumber);\n      if(selectedEmailsNumber === 0) return;\n      console.log(\"enter\")\n\n      const popUpBackground = document.createElement('div');\n      popUpBackground.className = 'pop-up-background';\n      document.body.appendChild(popUpBackground);\n\n      const popUp = document.createElement('div');\n      popUp.className = 'pop-up';\n      popUpBackground.appendChild(popUp);\n\n      const msg = document.createElement('h2');\n      if(store.getters.getActiveFolder == \"trash\") msg.innerText = `${selectedEmailsNumber} will be deleted permanently`;\n      else msg.innerText = `Sure to move ${selectedEmailsNumber} email(s) to Trash?`;\n      popUp.appendChild(msg);\n\n      const cancelBtn = document.createElement('span');\n      cancelBtn.innerText = 'Cancel';\n      cancelBtn.className = 'pop-up-close-button cancel-btn';\n\n      const confrimBtn = document.createElement('span');\n      confrimBtn.innerText = 'Confirm';\n      confrimBtn.className = 'pop-up-close-button confrim-btn';   \n\n      cancelBtn.onclick = () => {    \n        document.body.removeChild(popUpBackground); \n      }\n\n      confrimBtn.onclick = () => {\n        if(store.getters.getActiveFolder != \"trash\") {\n          this.deleteAllSelectedEmails();\n          fireInfoPopUp(`${selectedEmailsNumber} email(s) has been moved to trash`);\n        }\n        else {\n          this.deleteAllSelectedEmailsForever();\n          fireInfoPopUp(`${selectedEmailsNumber} email(s) has been deleted permanently`);\n        }\n        document.body.removeChild(popUpBackground); \n      }\n\n      popUp.appendChild(cancelBtn);\n      popUp.appendChild(confrimBtn);\n    },\n\n    deleteAllSelectedEmailsForever(){\n      for(const email of this.getSelectedEmails){\n        console.log(email);\n        this.deleteSingleEmailForEver(email);\n      }\n      store.commit('clearSelecteEmails');\n    },\n    deleteAllSelectedEmails(){\n      let allEmailsIds = \"\";\n      let first = true;\n      for(const email of this.getSelectedEmails){\n        if(first){\n          allEmailsIds += `${email.getId()}`;\n          first = false;\n        }\n        else allEmailsIds += `,${email.getId()}`;\n      }\n\n      axios.delete(`http://localhost:8080//deleteMultipleEmails`,{\n          params: { \n            userId: store.getters.getUserId,\n            emailsIds: allEmailsIds,\n            folderName: store.getters.getActiveFolder,\n          }\n        })\n        .then( () => {\n          store.commit('clearSelecteEmails');\n          this.refresh();\n        })\n        .catch( error => console.log(error)); \n    },\n    deleteSingleEmailForEver(email){\n      axios.delete(`http://localhost:8080//deleteForever`,{\n          params: { \n            userId: store.getters.getUserId,\n            emailId: email.getId(),\n          }\n        })\n        .then( () => {\n          this.refresh();\n        })\n        .catch( error => console.log(error)); \n    },\n\t}\n}\n</script>\n\n<style scoped>\n.control-wrapper{\n  display: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\talign-items: center;\n\theight: 3rem;\n\tborder-bottom: 1px solid rgb(224, 224, 224, 0.6);\n\tpadding-left: 1rem;\n  width: 100%;\n}\n\n.control-btn{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 2rem;\n\twidth: 2rem;\n\tborder-radius: 50%;\n  user-select: none;\n}\n.control-btn:hover{\n\tbackground-color: rgb(224, 224, 224, 0.6);\n}\n#emails-nav{\n\theight: 2rem;\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\twidth: 5rem;\n\tmargin-left: auto;\n\tmargin-right: 2rem;\n}\n\ninput[type=checkbox] + label {\n  display: block;\n\tuser-select: none;\n}\n\ninput[type=checkbox] {\n  display: none;\n}\nlabel{\n\tcolor: #767676;\n\tfont-size: medium;\n\tfont-weight: normal;\n}\n\ninput[type=checkbox] + label:before {\n  content: \"\\2714\";\n  border: 2px solid #767676;\n  border-radius: 0.3rem;\n  display: inline-block;\n  width: 0.8rem;\n  height: 0.8rem;\n  padding: 0.2rem;\n  margin-right: 0.4rem;\n  vertical-align: bottom;\n  color: transparent;\n  transition: .2s;\n}\n\ninput[type=checkbox] + label:active:before {\n  transform: scale(0);\n}\n\ninput[type=checkbox]:checked + label:before {\n  background-color: #3474E0;\n  border-color: #3474E0;\n}\n\ninput[type=checkbox]:disabled + label:before {\n  transform: scale(1);\n  border-color: #767676;\n}\n\ninput[type=checkbox]:checked:disabled + label:before {\n  transform: scale(1);\n  background-color: #3474E0;\n  border-color: #3474E0;\n}\n\n#select-all-container{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-left: 1.5rem;\n}\n\n.hidden{\n  visibility: hidden;\n  display: none;\n}\n.visible{\n  visibility: visible;\n  display: flex;\n}\n\n#delete-current-email{\n  margin-left: auto;\n  margin-right: 3rem;\n}\n\n#delete-selected-emails{\n  margin-left: 2rem;\n}\n</style>"]}]}